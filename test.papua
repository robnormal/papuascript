/*
	WHY THIS IS NOT OK: toInt x = parseInt x 10
	I wanted it, but it doesn't work, because of nullary functions.
	What does this following mean? 

	foo.bar = print(foo)

	It's ambiguous - could be setting foo.bar to the value
	returned by calling print now, or it could be a function
	that takes no arguments and calls that
*/

toInt = \x -> parseInt x 10

DBEmptyFailure = \query params ->
	@err = { query: query, params: params }

util.inherits DBEmptyFailure nodam.AsyncFailure

DBMissingFailure = \table condition ->
  @err = { table: table, condition: condition }

util.inherits  DBMissingFailure  DBEmptyFailure

getDB = \file -> //  function getDB(file) {
	db <- (nodam.get 'db').pipe  //  nadam.get('db').pipe(function(db) {
	if db
		Async.result db
	else
		db_open <- (sql.database file).pipe
		nodam.set 'db' db_open

do
	x
while y

for x = 2; x<5; x++
	z

if a
	b
else if c
	d
else if e
	f
else
	g

